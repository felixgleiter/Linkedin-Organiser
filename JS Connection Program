//CREATE TABLE connections (id INTEGER, first_name TEXT, last_name TEXT, email_address TEXT, company TEXT, position TEXT, connected_on TEXT, tags TEXT);

// Converting the CSV file into an SQL table

//SET count = 1
//while count <= 5000:
//INSERT INTO connections (id, first_name, last_name, email_address, company, position, connected_on, tags) VALUES (count, 'fn', 'ln', 'ea', 'com', 'pos', 'cn', 'ta');
//count += 1

// Alternative JS object method for data input

let d_b = {firstname: 'D ', surname: 'B', emailaddress: '', company: 'B', position: 'managing director', connectedon: '', tags: ''};
let n_b = {firstname: 'N ', surname: 'B', emailaddress: '', company: 'B', position: 'project manager', connectedon: '', tags: ''};
let m_m = {firstname: 'M ', surname: 'M', emailaddress: '', company: 'B', position: 'sales director', connectedon: '', tags: ''};
let d_k = {firstname: 'D ', surname: 'K', emailaddress: '', company: 'B', position: 'client relations', connectedon: '', tags: ''};
let s_h = {firstname: 'S ', surname: 'H', emailaddress: '', company: 'B', position: 'creative director', connectedon: '', tags: ''};
let n_s = {firstname: 'N ', surname: 'S', emailaddress: '', company: 'B', position: 'project manager', connectedon: '', tags: ''};
let p_b = {firstname: 'P ', surname: 'B', emailaddress: '', company: 'i_t_b', position: 'lead partner', connectedon: '', tags: ''};
let a_h = {firstname: 'A ', surname: 'H', emailaddress: '', company: 'i_t_b', position: 'lead developer', connectedon: '', tags: ''};
//let  = {firstname: '', surname: '', emailaddress: '', company: '', position: '', connectedon: '', tags: ''};
let B = [d_b, n_b, m_m, d_k, s_h, n_s];
let i_t_b = [p_b, a_h];
let managing_directors = [d_b];
let project_managers = [n_b, n_s];
let sales_directors = [m_m];
let client_relations = [d_k];
let creative_directors = [s_h];
let lead_partners = [p_b];
let lead_developers = [a_h];
let Companies = [B, i_t_b];
let Positions = [managing_directors, project_managers, sales_directors, client_relations, creative_directors, lead_partners, lead_developers];
  
// Basic Query for the SQL table

let Query = () => {
  
  console.log("Hello! Please type 'empty' where any value is unknown. Also please use '_' for spaces.")
  
  prompt("Company: ").toLowerCase();
  let Company = prompt("Company: ").toLowerCase();
  
  for (var c in Companies) {
    
    //let c = Companies[companiesIndex];
    
    if (Company === c) {
    
      prompt("Position: ").toLowerCase();
      let Position = prompt("Position: ").toLowerCase();
    
      for (var p in Positions) {
        
        //let p = Positions[positionsIndex];
        
        if (Position === p) { 
          
          let CompanyPosition = (c, p) => 
            {c.filter((name) => p.includes(name))};
          
          prompt("Surname: ").toLowerCase();
          let Surname = prompt("Surname: ").toLowerCase();
          
          for (var cp in CompanyPosition(c, p)) {
            
            //let cp = CompanyPosition(c, p)[companyPositionIndex];
            
            if (Surname === cp['surname'].toLowerCase()) 
              {console.log(cp['firstname'] + cp['surname'])}
              
            else if (Surname === "") 
              {console.log(cp['firstname'] + cp['surname'])}
          }
        }
        
        else if (Position === "") {
        
          prompt("Surname: ").toLowerCase();
          let Surname = prompt("Surname: ").toLowerCase();
          
          for (var c in Companies) {
        
            if (Surname === c[companyIndex]['surname'].toLowerCase()) 
              {console.log(c[companyIndex]['firstname'] + c[companyIndex]['surname'])}
              
            else if (Surname === "") 
              {console.log(c[companyIndex]['firstname'] + c[companyIndex]['surname'])}
          }
        }
      }
    }
      
    else if (Company === "") {
    
      prompt("Position: ").toLowerCase();
      let Position = prompt("Position: ").toLowerCase();
      
      for (var p in Positions) { //This leads to 'Surname' being requested 6 times after 'empty' x2!
        
        //let p = Positions[positionIndex];
        
        if (Position === p) {
        
          prompt("Surname: ").toLowerCase();
          let Surname = prompt("Surname: ").toLowerCase();
          
          for (var p in Positions) {
        
            if (Surname === p[positionIndex]['surname'].toLowerCase()) 
              {console.log(p[positionIndex]['firstname'] + p[positionIndex]['surname'])}
              
            else if (Surname === "") 
              {console.log(p[positionIndex]['firstname'] + p[positionIndex]['surname'])}
          }
        }
              
        else if (Position === "") {
        
          prompt("Surname: ").toLowerCase();
          let Surname = prompt("Surname: ").toLowerCase();
          
          for (var p in Positions) {
        
            if (Surname === p[positionIndex]['surname'].toLowerCase()) 
              {console.log(p[positionIndex]['firstname'] + p[positionIndex]['surname'])}
              
            else if (Surname === "") 
              {console.log(p[positionIndex]['firstname'] + p[positionIndex]['surname'])}
          }
        }
      }
    }
  }//elif eval(Company) != c and eval(Company) != empty: //Doesn't work!//return "I'm afraid I don't know that company. Please restart and try again."
}

Query()
